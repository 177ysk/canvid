{"name":"canvid.js","tagline":"tiny js library for playing video on canvas elements","body":"# canvid.js\r\n\r\n**canvid** is a tiny dependency free library for playback of relatively short videos on canvas elements. \r\n\r\n* **Why not just use HTML5 video?**  \r\n  Because you can't embed and autoplay HTML5 videos on iOS! Yeah, that sucks.\r\n\r\n* **Why is this better than using an animated GIF?**  \r\n  Videos look kind of gross when converted to animated GIFs because of the colors sampling. Also the file size of video GIFs can get pretty huge. GIF is just not made for videos. JPG does a much better job of compressing video frames. Also, animated GIFs don't give you any playback controls. You can't pause a GIF or delay it's playback. With canvid you can do that.\r\n\r\n* **Why only \"relatively short\" videos?**  \r\n  As you see further down, the container format for canvid is a big image sprite of all the frames of each clip. Sadly, iOS limits the maximum image size (bigger image get sampled down), so that puts a limit on the maximum frames you can store.\r\n\r\n## Installation\r\n\r\n**npm**\r\n\r\n```\r\n$ npm install --save canvid\r\n```\r\n\r\n**git clone**\r\n\r\n```\r\n$ git clone git@github.com:gka/canvid.git\r\n```\r\n\r\n## Usage\r\n\r\nYou can use canvid.js with AMD, CommonJS and browser globals.\r\n\r\n```js\r\nvar canvidControl = canvid({\r\n    selector : '.video',\r\n    videos: {\r\n        clip1: { src: 'clip1.jpg', frames: 38, cols: 6 },\r\n        clip2: { src: 'clip2.jpg', frames: 43, cols: 6, loops: 3 }\r\n    },\r\n    width: 500,\r\n    height: 400,\r\n    loaded: function() {\r\n        canvidControl.play('clip1');\r\n        // reverse playback\r\n        // canvidControl.play('clip1', true);\r\n    }\r\n});\r\n```\r\n\r\n## Options\r\n\r\n* **videos** required  \r\n  Video/Sprite objects (videoKey : videoOptions).\r\n\r\n  * **src** required  \r\n    Path of the sprite image.\r\n  \r\n  * **frames** required  \r\n    Number of frames. \r\n \r\n  * **cols** required  \r\n    Number of columns.  \r\n\r\n  * **loops** optional  \r\n    Number of loops.\r\n\r\n\r\n* **selector** optional  \r\n  The selector of the element where the video gets displayed.  \r\n  `default: '.canvid-wrapper'`\r\n\r\n* **width** optional  \r\n  Width of the element where the video gets displayed.  \r\n  `default: 800`\r\n\r\n* **height** optional  \r\n  Height of the element where the video gets displayed.  \r\n  `default: 450`\r\n\r\n* **loaded** optional  \r\n  Function that gets called when all videos are loaded.\r\n\r\n* **srcGif** optional  \r\n  Path of the fallback gif, if canvas is not supported.  \r\n\r\n\r\n## Methods\r\n\r\nThe canvid function returns an object to control the video:\r\n\r\n```js\r\nvar canvidControl = canvid(canvidOptions);\r\n```\r\n\r\n**play**  \r\nPlays video of the passed videoKey. Set the second parameter to `true`, if you want to play the video reversely.\r\n\r\n```js\r\ncanvidControl.play(videoKey [,isReverse]);\r\n```\r\n\r\n**pause**  \r\nPause current video.\r\n\r\n```js\r\ncanvidControl.pause();\r\n```\r\n\r\n**resume**  \r\nResume current video.\r\n\r\n```js\r\ncanvidControl.resume();\r\n```\r\n\r\n\r\n## How to convert your video to a JPG sprite\r\n\r\nFirst, convert you video into single frames using [ffmpeg](https://www.ffmpeg.org/):\r\n\r\n```\r\nffmpeg -i myvideo.mp4 -vf scale=375:-1 -r 5 frames/%04d.png\r\n```\r\n\r\nThen, use ImageMagicks [montage](http://www.imagemagick.org/script/montage.php) to stich all the frames into one big image:\r\n\r\n```\r\nmontage -border 0 -geometry 375x -tile 6x -quality 60% frames/*.png myvideo.jpg\r\n```\r\n\r\n## Contributors\r\n\r\n* [Gregor Aisch](http://driven-by-data.net)\r\n* [Moritz Klack](http://moritzklack.com)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}